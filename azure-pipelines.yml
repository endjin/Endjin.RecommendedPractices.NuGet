trigger:
  branches:
    include:
    - master
    - main
    - feature/*
  tags:
    include:
    - '*'

resources:
  repositories:
    - repository: recommended_practices
      type: github
      name: endjin/Endjin.RecommendedPractices.AzureDevopsPipelines.GitHub
      endpoint: endjin-github-patfix

 
jobs:
- job: Build
  variables:
    NuGetToolVersion: '5.4.0'
  pool:
    vmImage: 'windows-latest'

  steps:
  # GitVersion doesn't work on build agenst without the global tools workaround step
  - template: templates/install.dotnet-global-tools.workaround.yml@recommended_practices
  - template: templates/install-and-run-gitversion.yml@recommended_practices

  - powershell: |
      Write-Host "##vso[task.setvariable variable=Endjin_IsPreRelease]$((-not ([string]::IsNullOrEmpty($Env:GITVERSION_PRERELEASETAG))))"
      Write-Host "##vso[task.setvariable variable=Endjin_Repository_Name]$Env:BUILD_REPOSITORY_NAME"
    displayName: 'Set Environment Variables'

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '$(NuGetToolVersion)'

  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: 'src/Endjin.RecommendedPractices.Nuget.Specs/run-tests.ps1'
      pwsh: true
    displayName: Run tests

  - task: NuGetCommand@2
    inputs:
      command: 'pack'
      packagesToPack: 'src/Endjin.RecommendedPractices.NuGet/Endjin.RecommendedPractices.nuspec'
      versioningScheme: 'byEnvVar'
      versionEnvVar: 'GitVersion.SemVer'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Release Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'

  - task: GithubRelease@0 
    displayName: 'Create GitHub Release'      
    condition: and(succeeded(), or(variables['Endjin.ForcePublish'], eq(variables['GitVersion.PreReleaseTag'], '')))
    inputs:
      gitHubConnection: $(Endjin_Service_Connection_GitHub)
      repositoryName: endjin/Endjin.RecommendedPractices.NuGet
      tagSource: manual
      tag: $(GitVersion.SemVer) 
      isPreRelease: $(Endjin_IsPreRelease)
      assets: |
          $(Build.ArtifactStagingDirectory)/**

  - task: NuGetCommand@2
    displayName: 'Publish to nuget.org'
    condition: and(succeeded(), or(variables['Endjin.ForcePublish'], eq(variables['GitVersion.PreReleaseTag'], '')))
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: $(Endjin_Service_Connection_NuGet_Org)
      versioningScheme: byBuildNumber
      packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'