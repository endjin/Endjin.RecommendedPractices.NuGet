<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Tasks.Git" Version="1.1.1">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <Target Name="_EndjinTestGitHub" BeforeTargets="Build">
    <Message Text="****************************************Testing" Importance="high" />
    <Microsoft.Build.Tasks.Git.LocateRepository Path="$(MSBuildProjectDirectory)" RemoteName="$(GitRepositoryRemoteName)" ConfigurationScope="$(GitRepositoryConfigurationScope)">

      <Output TaskParameter="WorkingDirectory" PropertyName="_EndjinWorkingDirectory" />
      <Output TaskParameter="RepositoryId" PropertyName="_EndjinGitRepositoryId" />
      <Output TaskParameter="Url" PropertyName="_EndjinUrl" />
      <Output TaskParameter="Roots" ItemName="_EndjinRoots" />
      <!-- <Output TaskParameter="RevisionId" PropertyName="SourceRevisionId" Condition="'$(SourceRevisionId)' == ''" /> -->
    </Microsoft.Build.Tasks.Git.LocateRepository>
    <PropertyGroup>
      <EndjinProjectIsInGitRepo Condition="'$(_EndjinWorkingDirectory)'!=''">true</EndjinProjectIsInGitRepo>
      <EndjinProjectIsInGitRepo Condition="'$(EndjinProjectIsInGitRepo)'==''">false</EndjinProjectIsInGitRepo>
    </PropertyGroup>
    <Message Text="This project is in a Git repo" Condition="'$(EndjinProjectIsInGitRepo)'=='true'" />
    <PropertyGroup Condition="'$(_EndjinWorkingDirectory)'!=''">
      <!-- <EndjinProjectIsInGitHubRepo Condition="'$(_EndjinWorkingDirectory)'!=''">$([System.Text.RegularExpressions.Regex]::IsMatch($(_EndjinUrl), `(https://|ssh://[^@]*@)github.com/([^/]*)/([^/]*)`)</EndjinProjectIsInGitHubRepo> -->
      <EndjinProjectIsInGitHubRepo Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(_EndjinUrl), `(https://|ssh://[^@]*@)github.com/([^/]*)/([^/]*)`))">true</EndjinProjectIsInGitHubRepo>
      <EndjinProjectIsInGitRepo Condition="'$(EndjinProjectIsInGitRepo)'==''">false</EndjinProjectIsInGitRepo>
      <!-- <EndjinProjectIsInGitHubRepo Condition="'$(_EndjinWorkingDirectory)'!=''">$([System.Text.RegularExpressions.Regex]::Match($(_EndjinUrl), `(https://|ssh://git@)github.com/([^/]*)/([^/]*)`)</EndjinProjectIsInGitHubRepo> -->
    </PropertyGroup>
    <Message Text="** EndjinProjectIsInGitHubRepo $(EndjinProjectIsInGitHubRepo)" Importance="high" />

    <PropertyGroup Condition="'$(EndjinProjectIsInGitHubRepo)'=='true'">
      <EndjinGitHubOrg Condition="'$(EndjinProjectIsInGitRepo)'=='true'">$([System.Text.RegularExpressions.Regex]::Match($(_EndjinUrl), `(https://|ssh://git@)github.com/([^/]*)/([^/]*)`).Groups[2].Value)</EndjinGitHubOrg>
      <EndjinGitHubProject>$([System.Text.RegularExpressions.Regex]::Match($(_EndjinUrl), `(https://|ssh://[^@]*@)github.com/([^/]*)/([^/]*)(\.git)?`).Groups[3].Value)</EndjinGitHubProject>
      <EndjinGitHubProject Condition="$(EndjinGitHubProject.EndsWith('.git'))">$(EndjinGitHubProject.Substring(0, $(EndjinGitHubProject.LastIndexOf('.'))))</EndjinGitHubProject>
    </PropertyGroup>
    <Message Text="** WorkingDirectory $(_EndjinWorkingDirectory)" Importance="high" />
    <Message Text="** RepositoryId $(_EndjinGitRepositoryId)" Importance="high" />
    <Message Text="** Url $(_EndjinUrl)" Importance="high" />
    <Message Text="** Roots $(_EndjinRoots)" Importance="high" />
    <Message Text="** EndjinGitHubOrg $(EndjinGitHubOrg)" Importance="high" />
    <Message Text="** EndjinGitHubProject $(EndjinGitHubProject)" Importance="high" />
  </Target>

</Project>
