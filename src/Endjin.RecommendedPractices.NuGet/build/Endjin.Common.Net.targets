<Project ToolsVersion="14.0" 
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!--
        We set up code analysis to use a solution-level .editorconfig file. There's no built-in way
        for a NuGet package to supply solution-level content so we just check to see if the
        relevant files exist, and if not, create them.

        Note that this typically results in a warning directly after adding this NuGet package
        to a project for the first time in any solution, because the files won't get copied
        until you first build, but VS runs analyzers immediately to provide instant feedback.
        Once you've built, this warning shouldn't reappear.

        The automatic copying of these files can be disabled with:

        <EndjinDisableCodeAnalysis>true</EndjinDisableCodeAnalysis>

        which will also prevent the addition of the reference to StyleCop.Analyzers.
    -->
    <Target Name="_EndjinEnsureCodeAnalysisRuleSet" AfterTargets="BeforeBuild" BeforeTargets="CoreBuild">
        <Copy Condition="($(EndjinDisableCodeAnalysis) != 'true') and (!Exists('$(SolutionDir)stylecop.json'))" SourceFiles="$(MSBuildThisFileDirectory)stylecop.json" DestinationFiles="$(SolutionDir)stylecop.json" />
    </Target>

    <Target Name="_EndjinEnsureEditorConfig" AfterTargets="BeforeBuild" BeforeTargets="CoreBuild">
        <Copy Condition="($(EndjinDisableCreateEditorConfig) != 'true') and (!Exists('$(SolutionDir).editorconfig'))" SourceFiles="$(MSBuildThisFileDirectory)/.editorconfig" DestinationFiles="$(SolutionDir).editorconfig" />
    </Target>

    <!--
        If the solution doesn't already have a package icon, we supply a default one so that
        developers don't see a big red cross against a non-existent file as their first experience
        after adding this package.
    -->
    <Target Name="_EndjinEnsureSolutionLevelPackageIcon" AfterTargets="BeforeBuild" BeforeTargets="CoreBuild">
        <Copy Condition="($(IsPackable) != 'false') and ($(EndjinDisableDefaultPackageIconInclusion) != 'true') and (!Exists('$(SolutionDir)PackageIcon.png'))" SourceFiles="$(MSBuildThisFileDirectory)/DefaultPackageIcon.png" DestinationFiles="$(SolutionDir)PackageIcon.png" />
    </Target>

    <!--
        Non-packable projects will not be distributed through NuGet and so in general we don't
        require all public elements to be documented, so we disable SA1600. Projects that want
        to keep this can opt out with this setting:

        <EndjinLeaveWarningsEnabledOnNonPackableProject>true</EndjinLeaveWarningsEnabledOnNonPackableProject>
    -->
    <PropertyGroup Condition="($(IsPackable) == 'false') and ($(EndjinLeaveWarningsEnabledOnNonPackableProject) != 'true')">
        <NoWarn>$(NoWarn);SA1600</NoWarn>
    </PropertyGroup>

    <!--
        Ensure that if anyone adds a local.settings.json, it will get copied to the output folder
        without needing to manually configure it in Solution Explorer. (We don't want to have to
        configure them directly in the .csproj via Solution Explorer  because these local settings
        files don't get checked in, so not everyone has them. So you'd end up with project files
        specifying options for files that aren't actually there, causing Solution Explorer to show
        an entry for the file with a red icon indicating a problem.)

        This is in the .targets file so that it can run after all items have been defined.
    -->
    <ItemGroup>
        <None Update="local.settings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <!--
            Reference to preview version because there hasn't been a non-preview release in an age,
            the language support is a long way behind on the last non-preview version, and the
            package author says to use the preview versions.
        -->
        <!-- commenting out while we try an experiment to see if we can do this in the nuspec -->
        <!-- <PackageReference Condition="$(EndjinDisableCodeAnalysis) != 'true'" Include="StyleCop.Analyzers" Version="1.2.0-beta.435">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Condition="$(EndjinDisableCodeAnalysis) != 'true'" Include="Roslynator.Analyzers" Version="4.3.0">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference> -->
    </ItemGroup>
</Project>